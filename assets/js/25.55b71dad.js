(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{319:function(n,i,t){"use strict";t.r(i);var s=t(14),e=Object(s.a)({},(function(){var n=this,i=n._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[i("h2",{attrs:{id:"jenkings-下载安装"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#jenkings-下载安装"}},[n._v("#")]),n._v(" jenkings 下载安装")]),n._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[n._v("提示")]),n._v(" "),i("p",[n._v("安装 jenkins 之前，需要先安装 Java(jdk / jre)，tomcat(解压 jenkins 的 war 包)")])]),n._v(" "),i("ol",[i("li",[n._v("Java(jdk / jre)，tomcat 安装好环境配置好")]),n._v(" "),i("li",[n._v("将下载的 jenkins 的 war 包放进 tomcat 的 webapps 文件夹下")]),n._v(" "),i("li",[n._v("启动 tomcat（运行命令 startup.bat）。报错忽视，对后面没影响")]),n._v(" "),i("li",[n._v("访问 jenkins（localhost:9527/jenkins）")]),n._v(" "),i("li",[n._v("根据页面路径输入密码登录")])]),n._v(" "),i("p",[i("img",{attrs:{src:"/blog/img/jenkins/2.png",alt:"jenkins"}})]),n._v(" "),i("ol",{attrs:{start:"6"}},[i("li",[n._v("安装插件")]),n._v(" "),i("li",[n._v("创建管理员用户")]),n._v(" "),i("li",[n._v("实例配置")]),n._v(" "),i("li",[n._v("安装结束，重启 tomcat，重新访问")]),n._v(" "),i("li",[n._v("安装插件 NodeJs 并配置全局工具配置")])]),n._v(" "),i("p",[i("img",{attrs:{src:"/blog/img/jenkins/3.png",alt:"jenkins"}})]),n._v(" "),i("h2",{attrs:{id:"使用"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[n._v("#")]),n._v(" 使用")]),n._v(" "),i("p",[n._v("本文以 github 为例，通过 jenkins 持续集成 github 中的代码到服务器，安装完 jdk,tomcat，jenkins 后就要开始配置 jenkins 了。")]),n._v(" "),i("ol",[i("li",[i("p",[n._v("配置全局工具配置\n在首页进入 Manage Jenkins，点击 Global Total Configuration\n"),i("img",{attrs:{src:"/blog/img/jenkins/4.png",alt:"jenkins"}})]),n._v(" "),i("ul",[i("li",[i("p",[n._v("配置 git"),i("br"),n._v("\n输入 git 的安装路径，"),i("strong",[n._v("Name")]),n._v(" 随意写，"),i("strong",[n._v("Path to Git executable")]),n._v(" 是服务器 git 安装路径\n"),i("img",{attrs:{src:"/blog/img/jenkins/5.png",alt:"jenkins"}})])]),n._v(" "),i("li",[i("p",[n._v("配置 NodeJS"),i("br"),n._v(" "),i("strong",[n._v("Global npm packages to install")]),n._v(" 指定 npm 镜像源\n"),i("img",{attrs:{src:"/blog/img/jenkins/6.png",alt:"jenkins"}})])])])]),n._v(" "),i("li",[i("p",[n._v("系统配置"),i("br"),n._v("\n在首页进入 Manage Jenkins，点击 Configure System\n"),i("img",{attrs:{src:"/blog/img/jenkins/7.png",alt:"jenkins"}}),n._v("\na. Jenkins Location 需要集成 webhook 的话需要修改此处，因为 github 需要访问。"),i("RouterLink",{attrs:{to:"/Jenkins/setting.html#github-配置-webhook"}},[n._v("见如下配置")]),n._v(" "),i("img",{attrs:{src:"/blog/img/jenkins/8.png",alt:"jenkins"}})],1),n._v(" "),i("p",[i("img",{attrs:{src:"/blog/img/jenkins/9.png",alt:"jenkins"}})])]),n._v(" "),i("li",[i("p",[n._v("新建 Item，新建自由风格的任务，任务配置如下\n"),i("img",{attrs:{src:"/blog/img/jenkins/10.png",alt:"jenkins"}})]),n._v(" "),i("p",[n._v("源码管理\n"),i("img",{attrs:{src:"/blog/img/jenkins/11.png",alt:"jenkins"}})]),n._v(" "),i("p",[n._v("构建触发器 Webhook\n"),i("img",{attrs:{src:"/blog/img/jenkins/12.png",alt:"jenkins"}})]),n._v(" "),i("p",[n._v("最后一步：进行触发后的构建, 这里使用的是 shell 脚本进行构建\n"),i("img",{attrs:{src:"/blog/img/jenkins/13.png",alt:"jenkins"}})])])]),n._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[n._v("TIP")]),n._v(" "),i("p",[n._v("构建完成的打包结果放在 C:/Users/Administrator/.jenkins/workspace/test_task")])]),n._v(" "),i("h3",{attrs:{id:"github-配置-webhook"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#github-配置-webhook"}},[n._v("#")]),n._v(" Github 配置 webhook")]),n._v(" "),i("p",[n._v("配置前要求：")]),n._v(" "),i("ul",[i("li",[n._v("Jenkins 已经安装 Github 插件")]),n._v(" "),i("li",[n._v("Jenkins 服务器已经拥有一个公网 IP 地址（通过 ngork，将 IP 暴露到网络中\nGitHub 收到 push 动作后要主动通知 Jenkins，所以 Jenkins 所在服务器一定要有外网 IP，否则 GitHub 无法访问，解决方法：下载 ngrok，将 IP 暴露到网络上。步骤如下：）")])]),n._v(" "),i("ol",[i("li",[i("p",[n._v("第一步：配置 Jenkins 全局"),i("br"),n._v("\n尽管 Jenkins 已经配置与 Github 代码库进行通信，但我们需从 Jenkins 手动启动构建，如需启动自动构建，Jenkins 需要在 Hook URL 中监听 Github 的 Post 请求，才会进行自动构建\n要获取 Jenkins 的 Hook URL，打开 Jenkins 首页控制台--\x3e系统管理\n"),i("img",{attrs:{src:"/blog/img/jenkins/14.png",alt:"jenkins"}}),n._v("\n在 Github 插件的配置中，点击“高级”按钮"),i("br"),n._v("\n启用 Hook URL，并将 Hook URL 复制出来，并保存刚才的设置\n"),i("img",{attrs:{src:"/blog/img/jenkins/15.png",alt:"jenkins"}})])]),n._v(" "),i("li",[i("p",[n._v("第二步：配置 Github 项目仓库"),i("br"),n._v('\n还需要配置 Github 项目仓库，因为 Github 经常有代码处理动作，需要配置 Github 项目仓库在处理这些动作的同时会发送信号至 Jenkins，才使用 Jenkins 自动构建。点击项目的 Setting -> 在"Webhooks"选项卡中，点击"Add webhook" -> 将在 Jenkins 生成的 Hook URL 填入至 Payload URL 中，另外，选择自主事件\n'),i("img",{attrs:{src:"/blog/img/jenkins/16.png",alt:"jenkins"}}),n._v("\n以 Push 为例，并保存，即当 Github 收到了客户端有 Push 动作时，会触发一个 Hook\n"),i("img",{attrs:{src:"/blog/img/jenkins/17.png",alt:"jenkins"}}),n._v("\n保存 WebHook 之后\n"),i("img",{attrs:{src:"/blog/img/jenkins/18.png",alt:"jenkins"}})])]),n._v(" "),i("li",[i("p",[n._v("第三步：配置 Jenkins 项目"),i("br"),n._v("\n最后需要配置 Jenkins 项目触发的条件，到此刻，Github 遇到 Push 事件时，Jenkins 会收到通知，但 Jenkins 应该做什么呢？此步骤就是做最后的构建的动作。\n"),i("img",{attrs:{src:"/blog/img/jenkins/19.png",alt:"jenkins"}}),n._v("\n选择构建触发器，并且选择 Github Hook 触发\n"),i("img",{attrs:{src:"/blog/img/jenkins/20.png",alt:"jenkins"}})]),n._v(" "),i("ol",{attrs:{start:"4"}},[i("li",[n._v("第四步，在本地代码库做一些修改，并 Push 至 Github 后，查看 Jenkins 构建效果，本例虽然第三次构建出现错误，但 Github Hook 的路是通的"),i("br"),n._v(" "),i("img",{attrs:{src:"/blog/img/jenkins/21.png",alt:"jenkins"}}),n._v(" "),i("img",{attrs:{src:"/blog/img/jenkins/22.png",alt:"jenkins"}})])])])])])}),[],!1,null,null,null);i.default=e.exports}}]);